package edd_hospital_.vista;

import cjb.ci.CtrlInterfaz;
import cjb.ci.Validaciones;
import edd_hospital_.modelo.Paciente;
import edd_hospital_.multi_lista.NodoML;
import edd_hospital_.modelo.Datos;
import edd_hospital_.modelo.CreadorDeNodos;
import edd_hospital_.modelo.Hospitales;
import static edd_hospital_.vista.Validaciones.eliminaCopyPasteCut;
import interfaces.VentanaEditable;
import interfaces.VentanaRegistrable;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class vtnPacientes extends javax.swing.JDialog implements VentanaRegistrable, VentanaEditable
{

    Paciente objetoEditable;
    private NodoML nodoPaciente;

    /**
     * Creates new form vtnPacientes
     *
     * @param parent
     * @param modal
     */
    public vtnPacientes(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        jtfClave.setText(String.format("P%03d", Datos.getNumeroDeRegistros() + 1));

    }

    public void configurarParaEditable()
    {
        jtfNombre.setEditable(false);
        jtfNombre.setFocusable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        Fondo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        Paciente = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jtfVigencia = new javax.swing.JTextField();
        jtfNombre = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jtfClave = new javax.swing.JTextField();
        Cancelar = new javax.swing.JButton();
        jcbEstatus = new javax.swing.JComboBox<>();
        jcbSexo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Fondo.setBackground(new java.awt.Color(153, 153, 255));
        Fondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 152, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        Fondo.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 450));

        Paciente.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N
        jLabel9.setText("Nombre:");

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N
        jLabel10.setText("Estatus:");

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N
        jLabel11.setText("Vigencia:");

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N
        jLabel12.setText("Sexo:");

        jtfVigencia.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 14)); // NOI18N
        jtfVigencia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtfVigencia.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jtfVigenciaKeyTyped(evt);
            }
        });

        jtfNombre.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 14)); // NOI18N
        jtfNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtfNombre.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jtfNombreActionPerformed(evt);
            }
        });
        jtfNombre.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jtfNombreKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jtfNombreKeyTyped(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(153, 204, 255));
        btnGuardar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnGuardar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N
        jLabel13.setText("CVE:");

        jtfClave.setEditable(false);
        jtfClave.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 14)); // NOI18N
        jtfClave.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtfClave.setFocusable(false);
        jtfClave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jtfClaveActionPerformed(evt);
            }
        });
        jtfClave.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jtfClaveKeyTyped(evt);
            }
        });

        Cancelar.setBackground(new java.awt.Color(153, 204, 255));
        Cancelar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        Cancelar.setText("Cancelar");
        Cancelar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Cancelar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                CancelarActionPerformed(evt);
            }
        });

        jcbEstatus.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jcbEstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Opciones-", "Activo", "Inactivo" }));
        jcbEstatus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jcbSexo.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jcbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Opciones-", "Masculino", "Femenino" }));
        jcbSexo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout PacienteLayout = new javax.swing.GroupLayout(Paciente);
        Paciente.setLayout(PacienteLayout);
        PacienteLayout.setHorizontalGroup(
            PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PacienteLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfClave, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addComponent(jcbSexo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PacienteLayout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jLabel11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PacienteLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcbEstatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfVigencia))
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PacienteLayout.createSequentialGroup()
                .addContainerGap(202, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146)
                .addComponent(Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(256, 256, 256))
        );
        PacienteLayout.setVerticalGroup(
            PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PacienteLayout.createSequentialGroup()
                .addGroup(PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PacienteLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PacienteLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jcbEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfClave, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jtfVigencia, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PacienteLayout.createSequentialGroup()
                        .addGroup(PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addGroup(PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        Fondo.add(Paciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 830, -1));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 36)); // NOI18N
        jLabel6.setText("-PACIENTES-");
        Fondo.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

     private void jtfVigenciaKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtfVigenciaKeyTyped
     {//GEN-HEADEREND:event_jtfVigenciaKeyTyped
         eliminaCopyPasteCut(evt);
         Validaciones.validaEntero(evt, 10, jtfVigencia.getText());
         char c = evt.getKeyChar();
         if (!(Character.isDigit(c) || c == evt.VK_BACK_SPACE || c == evt.VK_DELETE))
         {
             evt.consume();
             return;
         }
         ponerDiagonal(jtfVigencia);

         if (jtfVigencia.getText().length() == 10)
         {
             if (!fechaValida(jtfVigencia.getText()))
             {
                 JOptionPane.showMessageDialog(null, "Fecha inválida. Asegúrate de que el día sea <= 30, el mes esté entre 1 y 12 y el año entre 2000 y 2050.");
                 jtfVigencia.setText("");
             }
         }
     }//GEN-LAST:event_jtfVigenciaKeyTyped
    private static void ponerDiagonal(JTextField textField)
    {
        String text = textField.getText().replaceAll("/", "");
        StringBuilder formatted = new StringBuilder();

        for (int i = 0; i < text.length(); i++)
        {
            if (i == 2 || i == 4)
            {
                formatted.append("/");
            }
            formatted.append(text.charAt(i));
            if (formatted.length() == 10)
            {
                break;
            }
        }

        textField.setText(formatted.toString());
        textField.setCaretPosition(formatted.length());
    }

    private static boolean fechaValida(String fecha)
    {
        try
        {
            String[] partes = fecha.split("/");
            if (partes.length != 3)
            {
                return false;
            }

            int dia = Integer.parseInt(partes[0]);
            int mes = Integer.parseInt(partes[1]);
            int anio = Integer.parseInt(partes[2]);

            if (dia < 1 || dia > 30)
            {
                return false;
            }
            if (mes < 1 || mes > 12)
            {
                return false;
            }
            if (anio < 2000 || anio > 2050)
            {
                return false;
            }

            return true;
        } catch (NumberFormatException e)
        {
            return false;
        }
    }


     private void jtfNombreKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtfNombreKeyTyped
     {//GEN-HEADEREND:event_jtfNombreKeyTyped
         Validaciones.validaAlfabeticos(evt, 35, jtfNombre.getText());
         eliminaCopyPasteCut(evt);

     }//GEN-LAST:event_jtfNombreKeyTyped

     private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnGuardarActionPerformed
     {//GEN-HEADEREND:event_btnGuardarActionPerformed
         try
         {
             String nombre = jtfNombre.getText();
             String estatus = jcbEstatus.getSelectedItem().toString();
             String vigencia = jtfVigencia.getText();
             String sexoString = jcbSexo.getSelectedItem().toString();

             if (nombre.isEmpty() || vigencia.isEmpty() || jcbSexo.getSelectedIndex() == 0 || jcbEstatus.getSelectedIndex() == 0)
             {
                 JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos",
                         "Error", JOptionPane.ERROR_MESSAGE);
                 return;
             }

             if (!vigencia.matches("\\d{2}/\\d{2}/\\d{4}"))
             {
                 JOptionPane.showMessageDialog(this, "Formato de vigencia inválido. Use DD/MM/AAAA",
                         "Error", JOptionPane.ERROR_MESSAGE);
                 return;
             }

             char sexoChar = sexoString.equals("Masculino") ? 'M' : 'F';
             CreadorDeNodos n = new CreadorDeNodos();
             this.nodoPaciente = n.NodoPaciente(estatus, vigencia, sexoChar, nombre);
             objetoEditable = new Paciente(estatus, vigencia, sexoChar, nombre, jtfClave.getText());
             dispose();

         } catch (RuntimeException ex)
         {
             JOptionPane.showMessageDialog(this, "Error al registrar el paciente: " + ex.getMessage(),
                     "Error", JOptionPane.ERROR_MESSAGE);

         }
     }//GEN-LAST:event_btnGuardarActionPerformed

     private void jtfClaveKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtfClaveKeyTyped
     {//GEN-HEADEREND:event_jtfClaveKeyTyped
         Validaciones.validaAlfanumerico(evt, 4, jtfClave.getText());
         CtrlInterfaz.habilita(rootPaneCheckingEnabled, btnGuardar);
         eliminaCopyPasteCut(evt);

     }//GEN-LAST:event_jtfClaveKeyTyped

     private void CancelarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CancelarActionPerformed
     {//GEN-HEADEREND:event_CancelarActionPerformed
         CtrlInterfaz.limpia(jtfNombre);

         CtrlInterfaz.limpia(jcbEstatus);
         CtrlInterfaz.limpia(jtfVigencia);
     }//GEN-LAST:event_CancelarActionPerformed

    private void jtfClaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jtfClaveActionPerformed
    {//GEN-HEADEREND:event_jtfClaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfClaveActionPerformed

    private void jtfNombreActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jtfNombreActionPerformed
    {//GEN-HEADEREND:event_jtfNombreActionPerformed
    }//GEN-LAST:event_jtfNombreActionPerformed

    private void jtfNombreKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtfNombreKeyPressed
    {//GEN-HEADEREND:event_jtfNombreKeyPressed
        eliminaCopyPasteCut(evt);
        Validaciones.validaAlfabeticos(evt, 30, jtfNombre.getText());
    }//GEN-LAST:event_jtfNombreKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(vtnPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(vtnPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(vtnPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(vtnPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                vtnPacientes vtn = new vtnPacientes(null, true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancelar;
    private javax.swing.JPanel Fondo;
    private javax.swing.JPanel Paciente;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> jcbEstatus;
    private javax.swing.JComboBox<String> jcbSexo;
    private javax.swing.JTextField jtfClave;
    private javax.swing.JTextField jtfNombre;
    private javax.swing.JTextField jtfVigencia;
    // End of variables declaration//GEN-END:variables

    @Override
    public NodoML getNodoRegistrado()
    {
        return nodoPaciente;
    }

    @Override
    public Object getObjetoEditado()
    {
        return objetoEditable;
    }

    @Override
    public void cargarDatos(NodoML n)
    {

        if (n == null)
        {
            throw new IllegalArgumentException("No se pudieron cargar los datos porque el nodo es null");
        }
        if (n.getObj() instanceof Paciente p)
        {
            jtfNombre.setText(p.getNombre());
            jtfClave.setText(p.getClaveP());
            jcbEstatus.setSelectedItem(p.getEstatus());
            char sexo = p.getSexo();
            String sexoString = sexo == 'M' ? "Masculino" : "Femenino";
            jcbSexo.setSelectedItem(sexoString);
            jtfVigencia.setText(p.getVigencia());

        } else
        {
            throw new IllegalArgumentException("EL objeto es null o no es de tipo dependencia");
        }

    }

}
