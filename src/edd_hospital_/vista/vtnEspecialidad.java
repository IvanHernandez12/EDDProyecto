package edd_hospital_.vista;

import cjb.ci.CtrlInterfaz;
import cjb.ci.Validaciones;
import edd_hospital_.modelo.Especialidad;
import edd_hospital_.multi_lista.NodoML;
import interfaces.VentanaRegistrable;
import edd_hospital_.modelo.Datos;
import edd_hospital_.modelo.CreadorDeNodos;
import edd_hospital_.modelo.Dependencia;
import static edd_hospital_.vista.Validaciones.eliminaCopyPasteCut;
import interfaces.VentanaEditable;
import javax.swing.JButton;
import javax.swing.JOptionPane;

public class vtnEspecialidad extends javax.swing.JDialog implements VentanaRegistrable, VentanaEditable
{

    private NodoML nodoEspecialidad;
    Especialidad objetoEditable;

    /**
     * Creates new form vtnEspecialidad
     *
     * @param parent
     * @param modal
     */
    public vtnEspecialidad(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        jtfClave.setText(String.format("E%03d", Datos.getNumeroDeRegistros() + 1));
    }

    public void configurarParaEditable()
    {
        jtfNombre.setEditable(false);
        jtfNombre.setFocusable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Especialidad = new javax.swing.JPanel();
        jtfClave = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jtfCamas = new javax.swing.JTextField();
        jtfMedicos = new javax.swing.JTextField();
        jtfNombre = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Cancelar1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setMinimumSize(new java.awt.Dimension(710, 410));

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Especialidad.setBackground(new java.awt.Color(255, 255, 255));

        jtfClave.setEditable(false);
        jtfClave.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jtfClave.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtfClave.setFocusable(false);
        jtfClave.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jtfClaveKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel3.setText("Cve:");

        btnGuardar.setBackground(new java.awt.Color(153, 153, 255));
        btnGuardar.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGuardar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel4.setText("Número de medicos: ");

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel15.setText("Número de camas: ");

        jtfCamas.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jtfCamas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtfCamas.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jtfCamasActionPerformed(evt);
            }
        });
        jtfCamas.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jtfCamasKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jtfCamasKeyTyped(evt);
            }
        });

        jtfMedicos.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jtfMedicos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtfMedicos.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jtfMedicosActionPerformed(evt);
            }
        });
        jtfMedicos.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jtfMedicosKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jtfMedicosKeyTyped(evt);
            }
        });

        jtfNombre.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jtfNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtfNombre.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jtfNombreActionPerformed(evt);
            }
        });
        jtfNombre.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jtfNombreKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jtfNombreKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel8.setText("Nombre:");

        Cancelar1.setBackground(new java.awt.Color(153, 153, 255));
        Cancelar1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        Cancelar1.setText("Cerrar");
        Cancelar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Cancelar1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Cancelar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EspecialidadLayout = new javax.swing.GroupLayout(Especialidad);
        Especialidad.setLayout(EspecialidadLayout);
        EspecialidadLayout.setHorizontalGroup(
            EspecialidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EspecialidadLayout.createSequentialGroup()
                .addGroup(EspecialidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EspecialidadLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(EspecialidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel15)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27)
                        .addGroup(EspecialidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCamas, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(EspecialidadLayout.createSequentialGroup()
                                .addGap(232, 232, 232)
                                .addComponent(Cancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfClave, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(EspecialidadLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        EspecialidadLayout.setVerticalGroup(
            EspecialidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EspecialidadLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(EspecialidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfClave, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(EspecialidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EspecialidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jtfCamas, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EspecialidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(EspecialidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jPanel2.add(Especialidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 720, 340));

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel6.setText("-ESPECIALIDADES-");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

     private void jtfClaveKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtfClaveKeyTyped
     {//GEN-HEADEREND:event_jtfClaveKeyTyped
         // TODO add your handling code here:
     }//GEN-LAST:event_jtfClaveKeyTyped

     private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnGuardarActionPerformed
     {//GEN-HEADEREND:event_btnGuardarActionPerformed
         try
         {
             if (jtfClave.getText().isEmpty() || jtfCamas.getText().isEmpty() || jtfMedicos.getText().isEmpty() || jtfNombre.getText().isEmpty())
             {
                 JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
                 return;
             }

             int camas = Integer.parseInt(jtfCamas.getText());
             int medicos = Integer.parseInt(jtfMedicos.getText());
             String nombre = jtfNombre.getText();

             if (camas <= 0)
             {
                 JOptionPane.showMessageDialog(this, "El número de camas  no puede ser menor a 1", "Error", JOptionPane.ERROR_MESSAGE);
                 return;
             }

             if (medicos < 0)
             {
                 JOptionPane.showMessageDialog(this, "El numero de medicos no puede ser menor a 0", "Error", JOptionPane.ERROR_MESSAGE);
                 return;
             }

             CreadorDeNodos n = new CreadorDeNodos();
             objetoEditable = new Especialidad(camas, medicos, nombre, jtfClave.getText());
             nodoEspecialidad = n.NodoEspecialidades(camas, medicos, nombre);
             dispose();

         } catch (NumberFormatException ex)
         {
             JOptionPane.showMessageDialog(this, "Los campos de camas y médicos deben ser números válidos", "Error", JOptionPane.ERROR_MESSAGE);
         } catch (IllegalArgumentException ex)
         {
             JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
         }
     }//GEN-LAST:event_btnGuardarActionPerformed
    @Override
    public void cargarDatos(NodoML n)
    {

        if (n == null)
        {
            throw new IllegalArgumentException("No se pudieron cargar los datos porque el nodo es null");
        }
        if (n.getObj() instanceof Especialidad e)
        {
            jtfClave.setText(e.getClaveE());
            jtfNombre.setText(e.getNombre());
            jtfCamas.setText(String.valueOf(e.getNumeroDeCamas()));
            jtfMedicos.setText(String.valueOf(e.getNumeroDeMedicos()));

        } else
        {
            throw new IllegalArgumentException("EL objeto es null o no es de tipo especialidad");
        }

    }

    @Override
    public NodoML getNodoRegistrado()
    {
        return this.nodoEspecialidad;
    }
     private void jtfCamasKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtfCamasKeyTyped
     {//GEN-HEADEREND:event_jtfCamasKeyTyped
         eliminaCopyPasteCut(evt);

         Validaciones.validaEntero(evt, 2, jtfCamas.getText());
     }//GEN-LAST:event_jtfCamasKeyTyped

     private void jtfMedicosKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtfMedicosKeyTyped
     {//GEN-HEADEREND:event_jtfMedicosKeyTyped
         eliminaCopyPasteCut(evt);

         Validaciones.validaEntero(evt, 2, jtfMedicos.getText());
     }//GEN-LAST:event_jtfMedicosKeyTyped

    private void jtfNombreActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jtfNombreActionPerformed
    {//GEN-HEADEREND:event_jtfNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNombreActionPerformed

    private void jtfNombreKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtfNombreKeyPressed
    {//GEN-HEADEREND:event_jtfNombreKeyPressed
        eliminaCopyPasteCut(evt);
        Validaciones.validaAlfanumerico(evt, 20, jtfNombre.getText());
    }//GEN-LAST:event_jtfNombreKeyPressed

    private void jtfNombreKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtfNombreKeyTyped
    {//GEN-HEADEREND:event_jtfNombreKeyTyped
        eliminaCopyPasteCut(evt);
        Validaciones.validaAlfabeticos(evt, 20, jtfNombre.getText());
    }//GEN-LAST:event_jtfNombreKeyTyped

    private void jtfMedicosActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jtfMedicosActionPerformed
    {//GEN-HEADEREND:event_jtfMedicosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfMedicosActionPerformed

    private void jtfCamasActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jtfCamasActionPerformed
    {//GEN-HEADEREND:event_jtfCamasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCamasActionPerformed

    private void jtfCamasKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtfCamasKeyPressed
    {//GEN-HEADEREND:event_jtfCamasKeyPressed
        eliminaCopyPasteCut(evt);
        Validaciones.validaEntero(evt, 2, jtfNombre.getText());    }//GEN-LAST:event_jtfCamasKeyPressed

    private void jtfMedicosKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtfMedicosKeyPressed
    {//GEN-HEADEREND:event_jtfMedicosKeyPressed
        eliminaCopyPasteCut(evt);
        Validaciones.validaEntero(evt, 2, jtfNombre.getText());    }//GEN-LAST:event_jtfMedicosKeyPressed

    private void Cancelar1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Cancelar1ActionPerformed
    {//GEN-HEADEREND:event_Cancelar1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_Cancelar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(vtnEspecialidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(vtnEspecialidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(vtnEspecialidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(vtnEspecialidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                vtnEspecialidad vtn = new vtnEspecialidad(null, true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancelar1;
    private javax.swing.JPanel Especialidad;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jtfCamas;
    private javax.swing.JTextField jtfClave;
    private javax.swing.JTextField jtfMedicos;
    private javax.swing.JTextField jtfNombre;
    // End of variables declaration//GEN-END:variables

    @Override
    public Object getObjetoEditado()
    {
        return objetoEditable;
    }
}
